const { expect, assert } = require("chai");
const hre = require("hardhat");

describe("SBT minting and verification", function () {

  let privateSoulMinter;
  let verifier;
  let privateOver18Aidrop;

  beforeEach(async function () {
    signers = await hre.ethers.getSigners();
    collector = signers[1];
    collectorAddress = collector.address;

    // Deploy Private Soul Minter contract
    let PrivateSoulMinterContract = await hre.ethers.getContractFactory("PrivateSoulMinter")
    privateSoulMinter = await PrivateSoulMinterContract.deploy()

    // Deploy Verifier contract
    let VerifierContract = await hre.ethers.getContractFactory("Verifier")
    verifier = await VerifierContract.deploy()

    // Deploy Private Over 18 Airdrop contract
    let PrivateOver18AirdropContract = await hre.ethers.getContractFactory("PrivateOver18Airdrop")
    privateOver18Aidrop = await PrivateOver18AirdropContract.deploy(verifier.address, privateSoulMinter.address)

    // input correct claim signature by the issuer
    let sigR8x = "5288934873515066744407360021175347774328283521815243825463338156746700965443"
    let sigR8y = "4653388640217130471849235597911239222005917737883282265350750838939007616127"
    let sigS  = "339273884829908499315499470612334526171037569413339691177061986410380854479"    

    // mint the NFT to the collector
    metaURI = "https://bafybeibodo3cnumo76lzdf2dlatuoxtxahgowxuihwiqeyka7k2qt7eupy.ipfs.nftstorage.link/"
    claimHashMetadata = hre.ethers.utils.solidityKeccak256(["uint", "uint", "uint"], [sigR8x, sigR8y, sigS])

    let tx = await privateSoulMinter.mint(collectorAddress, metaURI,claimHashMetadata);

    let receipt = await tx.wait();
    tokenId = receipt.events?.filter((x) => {return x.event == "Transfer"})[0].topics[3]
  });

  it("the SBT should not be transferable", async function () {
    await expect(privateSoulMinter.connect(collector).transferFrom(collectorAddress, signers[2].address, tokenId)).to.be.reverted;
  });

  it("a user cannot have more than 1 SBT attesting their age", async function () {
    await expect(privateSoulMinter.mint(collectorAddress, metaURI, claimHashMetadata)).to.be.revertedWith("You can only have one token associated to your soul");
  });

  it("should include the user in the aidrop after presenting a correct proof", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]
    // input[72] represents the public input of the circuit
    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]
    await privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId);

    assert.equal(await privateOver18Aidrop.isElegibleForAirdrop(collectorAddress), true);

  });

  it("should revert if a user presents the same proof twice", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]
    // input[72] represents the public input of the circuit
    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]
    await privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId);

    await expect(privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId)).to.be.revertedWith("You already claimed your airdrop!");
  });

  it("should revert if the correct proof is presented by someone who is not the owner of the SBT", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]
    // input[72] represents the public input of the circuit
    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]
    await expect(privateOver18Aidrop.connect(signers[2]).collectAirdrop(a, b, c, input, tokenId)).to.be.revertedWith("This token belongs to another soul");
  });

  it("should revert if presented a proof based on an invalid schema", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]

    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]

    let invalidSchemaHash = "0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bcd"

    input[5] = invalidSchemaHash

    await expect(privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId)).to.be.revertedWith("Wrong Claim schema used to generate the proof");
  });

  it("should revert if presented a proof based on a different query #1 ", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]

    // Using a query based on a slot index 3 instead of slot index 2
    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]

    let invalidQuerySlot = "0x0000000000000000000000000000000000000000000000000000000000000003"

    input[6] = invalidQuerySlot

    await expect(privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId)).to.be.revertedWith("Invalid slot index used to generate the proof");
  });

  it("should revert if presented a proof based on a different query #2 ", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]

    // Using a query based on a operator 3 (greater than) we use operator 2 (less than)
    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]

    let invalidQueryOperator = "0x0000000000000000000000000000000000000000000000000000000000000002"

    input[7] = invalidQueryOperator
    await expect(privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId)).to.be.revertedWith("Invalid operator used to generate the proof");
  });

  it("should revert if a user passes in a wrong signature", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]

   // Use an invalid claim signature    
    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]

    let invalidClaimSignature = "0x153f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852354"

    input[2] = invalidClaimSignature

    await expect(privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId)).to.be.revertedWith("The signature is not valid");
  });

  it("should revert if passing a wrong proof", async function () {

    let a =["0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970d", "0x01a4dec38ad9eb49079869307617eac43e53e5ae95f93b1458e643dd9bb9880e"]
    let b = [["0x1d2550b15f677bb772d6c429299203605743a218c3ab049193590cd91bde56d5", "0x00881a4642d293ea4182663fb09c3a6740d0ad6bd2c7771f3ec31e4268feba43"],["0x04797faab467c316f9ec68dc211e656fd93cf12a166c7d9926f02bc1cca8e2b4", "0x2889ec21be9054f27a9d4accb2aa0ae33e779a0ddfc412d42089392848e290dc"]]
    let c = ["0x1767a9b8ac2b06b65cb622c79f7f328e80b98a1542af10947d4a423b1686c305", "0x1d06cf83861b050de634e6f90b1d71bea501c81fc2eeea733247f396fabf01b7"]

   // Use an invalid claim signature    
    let input = ["0x0bb16e59a25fb48b6b644fd1f98e022ab0938a33c9fffd8d11792e1bd7ff4643","0x0a49b981a887e4a7f69268120a574137424a46a5f3d40a1a3069a3d7936c847f","0x00c005afcdc4fe33f89f6d822a96f53151a630373803cdcb2ec0c15734ab04cf","0x152f5044240ef872cf7e6742fe202b9e07ed6188e9e734c09b06939704852358","0x2865441cd3e276643c84e55004ad259dff282c8c47c6e8c151afacdadf6f6db3","0x0000000000000000000000000000000087b9b4c689c2024c54d1bf962cb16bce","0x0000000000000000000000000000000000000000000000000000000000000002","0x0000000000000000000000000000000000000000000000000000000000000003","0x0000000000000000000000000000000000000000000000000000000000000012","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000000000000000000000000000"]

    let invalidAProofPoint = "0x2f663616e413bb4bbd6ed9afa70ae0e1be2190fd35fba3af817bbebad369970c"

    a[0] = invalidAProofPoint

    await expect(privateOver18Aidrop.connect(collector).collectAirdrop(a, b, c, input, tokenId)).to.be.reverted
  });
});